#leetcode
class Solution:
    def sortedListToBST(self, head: Optional[ListNode]) -> Optional[TreeNode]:
        nums=[]
        while head: 
            nums.append(head.val)
            head=head.next
        def add(low,high):
            if low>high:
                return
            mid=(high+(low-high)//2)
            root=TreeNode(nums[mid])
            root.left=add(low,mid-1)
            root.right=add(mid+1,high)
            return root
        return add(0,len(nums)-1)
